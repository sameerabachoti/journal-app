{"ast":null,"code":"var _jsxFileName = \"/Users/sameera/Documents/journalApp/app/src/Home.js\";\nimport { withRouter, Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      user: undefined\n    };\n\n    this.logout = () => {\n      console.log(\"csrf token \", this.props);\n      fetch('/api/logout', {\n        method: 'POST',\n        credentials: 'include',\n        headers: {\n          'X-XSRF-TOKEN': this.state.csrfToken\n        }\n      }).then(res => res.json()).then(response => {\n        window.location.href = response.logoutUrl + \"?id_token_hint=\" + response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n      });\n    };\n\n    const {\n      cookies\n    } = props;\n    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n    this.login = this.login.bind(this);\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/user', {\n      credentials: 'include'\n    });\n    const body = await response.text();\n    console.log(\"body \", body);\n\n    if (body === '') {\n      this.setState({\n        isAuthenticated: false\n      });\n    } else {\n      this.setState({\n        isAuthenticated: true,\n        user: JSON.parse(body)\n      });\n    }\n  }\n\n  login() {\n    let port = window.location.port ? ':' + window.location.port : '';\n\n    if (port === ':3000') {\n      port = ':8080';\n    }\n\n    window.location.href = '//' + window.location.hostname + port + '/private';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 4\n      }\n    }, this.state.isAuthenticated ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, \"Logout\"))) : /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"lg\",\n      color: \"success\",\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default withCookies(Home);","map":{"version":3,"sources":["/Users/sameera/Documents/journalApp/app/src/Home.js"],"names":["withRouter","Router","Switch","Route","React","Button","ButtonGroup","Link","withCookies","Home","Component","constructor","props","state","isLoading","isAuthenticated","user","undefined","logout","console","log","fetch","method","credentials","headers","csrfToken","then","res","json","response","window","location","href","logoutUrl","idToken","origin","cookies","get","login","bind","componentDidMount","body","text","setState","JSON","parse","port","hostname","render"],"mappings":"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","sourcesContent":["import { withRouter, Router, Switch, Route } from 'react-router-dom';\nimport React from 'react';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { withCookies } from 'react-cookie';\n\nclass Home extends React.Component {\n\tstate = {\n\t    isLoading: true,\n\t    isAuthenticated: false,\n\t    user: undefined\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t    const {cookies} = props;\n\t    this.state.csrfToken = cookies.get('XSRF-TOKEN');\n\t    this.login = this.login.bind(this);\n\t}\n\t\n\tasync componentDidMount() {\n\t    const response = await fetch('/api/user', {credentials: 'include'});\n\t    const body = await response.text();\n\t    console.log(\"body \", body);\n\t    if (body === '') {\n\t      this.setState(({isAuthenticated: false}))\n\t    } else {\n\t      this.setState({isAuthenticated: true, user: JSON.parse(body)})\n\t    }\n\t}\n\n\tlogin() {\n\t    let port = (window.location.port ? ':' + window.location.port : '');\n\t    if (port === ':3000') {\n\t      port = ':8080';\n\t    }\n\t    window.location.href = '//' + window.location.hostname + port + '/private';\n\t}\n\t\n\tlogout = () => {\n\t    console.log(\"csrf token \", this.props);\n\t    fetch('/api/logout', {method: 'POST', credentials: 'include',\n\t      headers: {'X-XSRF-TOKEN': this.state.csrfToken}}).then(res => res.json())\n\t      .then(response => {\n\t        window.location.href = response.logoutUrl + \"?id_token_hint=\" +\n\t          response.idToken + \"&post_logout_redirect_uri=\" + window.location.origin;\n\t      });\n\t  }\n\n\trender(){\n\t\treturn(\n\t\t\t<React.Fragment>\n\t\t\t{this.state.isAuthenticated ?\n\t\t\t\t<div>\n\t\t\t\t   <center><Button color=\"danger\" onClick={this.logout}>Logout</Button></center>\n\t\t\t\t</div> :\n\t\t   <center><Button size=\"lg\" color=\"success\" onClick={this.login}>Login</Button></center>}\n\t\t   </React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withCookies(Home);"]},"metadata":{},"sourceType":"module"}